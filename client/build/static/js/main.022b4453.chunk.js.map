{"version":3,"sources":["components/StudentResultBoard.jsx","components/SchoolAdmissionForm.jsx","components/AdminSchoolAdmissionList.jsx","components/AdminStudentResultForm.jsx","App.js","index.js"],"names":["useStyles","makeStyles","theme","typography","textAlign","table","minWidth","topper","color","pass","fail","heading","fontWeight","subHeading","fontStyle","createMuiTheme","palette","primary","green","StudentResultBoard","classes","useState","tableData","setTableData","errorMessage","setErrorMessage","useEffect","axios","get","then","response","console","log","data","message","length","arr","map","item","name","sort","dataArray","forEach","push","firstName","split","modifiedFirstName","charAt","toUpperCase","i","firstCharacterCapitalize","finalData","tempObj","rollNumber","totalMarks","prop","marks","Number","status","totalMarksArray","highestMark","Math","max","index","indexOf","dataProcess","catch","err","ThemeProvider","Typography","variant","className","Divider","Grid","container","direction","xs","md","TableContainer","component","Paper","elevation","Table","size","TableHead","TableRow","TableCell","align","TableBody","row","key","scope","style","Alert","props","errorTypography","marginLeft","textfield","margin","SchoolAdmissionForm","history","open","setOpen","handleClose","e","reason","successMessage","setSuccessMessage","Name","LastName","Class","Year","Marks","form","setForm","formError","setFormError","buttonActive","formValid","setFormValid","textfieldError","setTextfieldError","handleChange","target","value","validate","modifiedFormError","modifiedFormValid","modifiedTextfieldError","regex1","RegExp","regex2","test","TextField","error","onChange","fullWidth","type","label","Button","disabled","onClick","preventDefault","obj","post","Snackbar","autoHideDuration","onClose","severity","AdminSchoolAdmissionList","AdminStudentResultForm","Maths","English","Science","appbar","backgroundColor","primaryGrid","marginRight","button","fontSize","App","Link","to","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.022b4453.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react';\r\n//Material-ui Imports\r\nimport {Grid, Divider, Typography,\r\n        Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper\r\n} from '@material-ui/core'\r\nimport {createMuiTheme, ThemeProvider, makeStyles} from '@material-ui/core/styles'\r\nimport {green} from '@material-ui/core/colors'\r\n//import data/data.json\r\n// import Data from '../data/data.json'\r\n//Our REST API is ready. Lets fetch data from that\r\n//we will need axios\r\nimport axios from 'axios'\r\n//makeStyles from MUI\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography : {\r\n        textAlign : \"center\"\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    topper:{\r\n        color:'green'\r\n    },\r\n    pass:{\r\n        color:'black'\r\n    },\r\n    fail:{\r\n        color:'red'\r\n    },\r\n    heading:{\r\n        fontWeight:'bold'\r\n    },\r\n    subHeading:{\r\n        fontStyle:'italic'\r\n    }\r\n}))\r\n\r\n\r\n//make a MUI theme\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    }\r\n})\r\n\r\nconst StudentResultBoard = () => {\r\n\r\n    //useStyles hook\r\n    const classes = useStyles()\r\n    \r\n    //state for table data\r\n    const [tableData,setTableData] = useState([])\r\n\r\n    //Helper function to capitalize first character\r\n    const firstCharacterCapitalize = (data) => {\r\n        data.forEach(item => {\r\n            const firstName = item.name.split(' ')[0]\r\n            let modifiedFirstName = firstName.charAt(0).toUpperCase()\r\n            for(let i=1;i<firstName.length;i++){\r\n                modifiedFirstName += firstName.charAt(i)\r\n            }\r\n            item.name = modifiedFirstName\r\n        })\r\n        return data\r\n    }\r\n\r\n    \r\n    let [errorMessage, setErrorMessage] = useState('')\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    //useEffect on first render to process the table data and set it to the state\r\n    useEffect(() => {\r\n\r\n        //helper function to process the data to get it in desired form\r\n    const dataProcess = (data) => {\r\n            //sort the names as per alphabetical order\r\n            const arr = data.map(item => item.name)\r\n            arr.sort()\r\n            let dataArray = []\r\n            arr.forEach(name => {\r\n                data.forEach(item => {\r\n                    if (item.name === name) {\r\n                        dataArray.push(item)\r\n                    }\r\n                })\r\n            });\r\n            //function that capitalizes the first character of names\r\n            dataArray = firstCharacterCapitalize(dataArray)\r\n            console.log('dataArray ---> ', dataArray);\r\n            //now lets design the data to fed into the table\r\n            //Data that should go into the td(s) should be in the following format   ----->\r\n            //{\"Student Name\" : '', \"Roll Number\" : '', \"Total Marks\" : '', \"Status\" : ''  }\r\n\r\n            let finalData = dataArray.map(item => {\r\n                let tempObj = {}\r\n                tempObj['name'] = item.name\r\n                tempObj['rollNumber'] = item.rollNumber\r\n                let totalMarks = 0\r\n                for (let prop in item.marks) {\r\n                    totalMarks += Number(item.marks[prop])\r\n                }\r\n                tempObj['totalMarks'] = totalMarks\r\n                let status = ''\r\n                let color = ''\r\n                for (let prop in item.marks) {\r\n                    if (Number(item.marks[prop]) < 20) {\r\n                        status = 'Fail'\r\n                        color = classes.fail\r\n                        break\r\n                    }\r\n                    else {\r\n                        status = 'Pass'\r\n                        color = classes.pass\r\n                    }\r\n                }\r\n                tempObj['status'] = status\r\n                tempObj['color'] = color\r\n                return tempObj\r\n            })\r\n\r\n            //Get the topper and assign his/her status to be Topper\r\n            let totalMarksArray = finalData.map(item => item.totalMarks)\r\n            const highestMark = Math.max(...totalMarksArray)\r\n            const index = totalMarksArray.indexOf(highestMark)\r\n            finalData[index]['status'] = 'Topper'\r\n            finalData[index]['color'] = classes.topper\r\n            return finalData\r\n        }\r\n\r\n//----------------------------------------fetch the data-----------------------------------------------------------------------------------//\r\n        axios.get('https://student-notice-board.herokuapp.com/getResults').then(response => {\r\n            console.log('data.message ---> ', response.data.message);\r\n            if (response.data.message && response.data.message.length !== 0) {\r\n                const data = dataProcess(response.data.message)\r\n                setTableData(data)\r\n                setErrorMessage('')\r\n            }\r\n        }).catch(err => {\r\n            setErrorMessage(err.response.data.message)\r\n        })\r\n    }, [classes.pass,classes.fail,classes.topper])\r\n\r\n//----------------------------------------------------------JSX------------------------------------------------------------------------//\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <br/>\r\n                <Typography color='primary' variant='h4' className={classes.typography}>\r\n                    STUDENT RESULT BOARD\r\n                </Typography>\r\n                <br/>\r\n                <Divider />  \r\n                <br/>\r\n                <Grid container direction='row'>\r\n                    <Grid item xs={false} md={1}/>\r\n                    <Grid item xs={12} md={10}>\r\n                    {\r\n                        errorMessage.length === 0 ? <TableContainer component={Paper} elevation={0}>\r\n                        <Table className={classes.table} size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.heading}>STUDENT RESULT BOARD</TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell className={classes.subHeading}>Student Name</TableCell>\r\n                                    <TableCell className={classes.subHeading} align=\"right\">Roll Number</TableCell>\r\n                                    <TableCell className={classes.subHeading} align=\"right\">Total Marks</TableCell>\r\n                                    <TableCell className={classes.subHeading} align=\"right\">Status</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tableData.map((row) => (\r\n                                    <TableRow key={row.name}>\r\n                                        <TableCell component=\"th\" scope=\"row\" className={row.color}>\r\n                                            {row.name}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\" className={row.color}>{row.rollNumber}</TableCell>\r\n                                        <TableCell align=\"right\" className={row.color}>{row.totalMarks}</TableCell>\r\n                                        <TableCell align=\"right\" className={row.color}>{row.status}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>:\r\n                    <Typography style={{color:'red'}} variant='h6' className={classes.typography}>\r\n                        {errorMessage}\r\n                    </Typography>\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={false} md={1}/>  \r\n                </Grid>\r\n\r\n            </ThemeProvider>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default StudentResultBoard;","//Make necessary imports\r\nimport React, { useState } from 'react';\r\n//Material-ui Imports \r\nimport {Grid,TextField,Divider,Button,Typography,Snackbar} from '@material-ui/core'\r\nimport {makeStyles,createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\r\nimport {green} from '@material-ui/core/colors'\r\n//Alert from Mui/lab\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n//import axios\r\nimport axios from 'axios'\r\n\r\n\r\n//core function for snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    typography : {\r\n        textAlign : \"center\"\r\n    },    \r\n    errorTypography : {\r\n        color : 'red',\r\n        marginLeft : '10px',\r\n        textAlign: 'center'\r\n    },\r\n    textfield:{\r\n        margin:'10px'\r\n    }\r\n})\r\n\r\n\r\n//make an MUI theme\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    }\r\n})\r\n\r\nconst SchoolAdmissionForm = (props) => {\r\n    //get History\r\n    const {history} = props\r\n    //MUI useStyles hook\r\n    const classes = useStyles()\r\n\r\n    //snackbar state and handler\r\n    const [open,setOpen] = useState(false)\r\n    const handleClose = (e,reason) => {\r\n        if(reason === 'clickaway'){\r\n            return\r\n        }\r\n        setOpen(false)\r\n    }\r\n    const [successMessage,setSuccessMessage] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n//------------------------------------------------------------------VALIDATION----------------------------------------------------------//\r\n    \r\n    const [form,setForm] = useState({Name : '', LastName : '', Class : '', Year: '', Marks : '' })\r\n    const [formError,setFormError] = useState({Name : '', LastName : '', Class : '', Year: '', Marks : '' })\r\n    const [formValid,setFormValid] = useState({Name : false, LastName : false, Class : false, Year: false, Marks : false, buttonActive : false })\r\n    const [textfieldError, setTextfieldError] = useState({Name : false, LastName : false, Class : false, Year: false, Marks : false})\r\n\r\n    //handleChange\r\n    const handleChange = e => {\r\n        const {name,value} = e.target\r\n        setForm({ ...form, [name]: value })\r\n        validate(name,value)\r\n    }\r\n\r\n    const validate = (name,value) => {\r\n        let modifiedFormError = formError\r\n        let modifiedFormValid = formValid\r\n        let modifiedTextfieldError = textfieldError\r\n        const regex1 = new RegExp(/^[A-Za-z ]+$/)\r\n        const regex2 = new RegExp(/^[0-9]{1,}[A-Za-z]{0,}$/)\r\n        switch(name){\r\n            case 'Name':\r\n                if(value.length === 0){\r\n                    modifiedFormError[name] = 'Field Required'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else if(value.length > 20){\r\n                    modifiedFormError[name] = 'Length can not be more that 20'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else if(!(regex1.test(value))){\r\n                    modifiedFormError[name] = 'Only alphabets are allowed'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else{\r\n                    modifiedFormError[name] = ''\r\n                    modifiedFormValid[name] = true\r\n                    modifiedTextfieldError[name] = false\r\n                }\r\n                break\r\n            case 'LastName':\r\n                if(value.length === 0){\r\n                    modifiedFormError[name] = 'Field Required'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else if(value.length > 20){\r\n                    modifiedFormError[name] = 'Length can not be more that 20'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else if(!(regex1.test(value))){\r\n                    modifiedFormError[name] = 'Only alphabets are allowed'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else{\r\n                    modifiedFormError[name] = ''\r\n                    modifiedFormValid[name] = true\r\n                    modifiedTextfieldError[name] = false\r\n                }\r\n                break\r\n            case 'Class':\r\n                if(value.length === 0){\r\n                    modifiedFormError[name] = 'Field Required'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else if(!(regex2.test(value))){\r\n                    modifiedFormError[name] = 'Only alphabets and numbers are allowed'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else{\r\n                    modifiedFormError[name] = ''\r\n                    modifiedFormValid[name] = true\r\n                    modifiedTextfieldError[name] = false\r\n                }\r\n                break\r\n            case 'Year':\r\n                if (value.length === 0) {\r\n                    modifiedFormError[name] = \"Field Required\"\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                if(Number(value) > 2017){\r\n                    modifiedFormError[name] = 'Year of passing should not be after 2017'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else{\r\n                    modifiedFormError[name] = ''\r\n                    modifiedFormValid[name] = true\r\n                    modifiedTextfieldError[name] = false\r\n                }\r\n                break\r\n            case 'Marks':\r\n                if (value.length === 0) {\r\n                    modifiedFormError[name] = \"Field Required\"\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                if(Number(value) < 0 || Number(value) > 100){\r\n                    modifiedFormError[name] = 'Percentage of marks should be between 0 to 100'\r\n                    modifiedFormValid[name] = false\r\n                    modifiedTextfieldError[name] = true\r\n                }\r\n                else{\r\n                    modifiedFormError[name] = ''\r\n                    modifiedFormValid[name] = true\r\n                    modifiedTextfieldError[name] = false\r\n                }\r\n                break\r\n            default: break\r\n        }\r\n        modifiedFormValid.buttonActive = modifiedFormValid.Name && modifiedFormValid.LastName && modifiedFormValid.Class\r\n                                         && modifiedFormValid.Year && modifiedFormValid.Marks\r\n        \r\n        setFormError(modifiedFormError)\r\n        setFormValid(modifiedFormValid)\r\n        setTextfieldError(modifiedTextfieldError)\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let obj = form\r\n        axios.post('https://student-notice-board.herokuapp.com/createAdmission',obj).then(response => {\r\n            if(response.data.message){\r\n                setSuccessMessage(response.data.message)\r\n                setErrorMessage('')\r\n                setForm({Name : '', LastName : '', Class : '', Year: '', Marks : '' })\r\n                setOpen(true)\r\n            }\r\n        }).catch(err => {\r\n            setSuccessMessage('')\r\n            setErrorMessage(err.response.data.message)\r\n            setForm({Name : '', LastName : '', Class : '', Year: '', Marks : '' })\r\n            setOpen(true)\r\n        })\r\n    }\r\n    \r\n\r\n\r\n//--------------------------------------------------JSX-------------------------------------------------------------//\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <br/>\r\n                <Typography color='primary' variant='h4' className={classes.typography}>\r\n                    SCHOOL ADMISSION FORM\r\n                </Typography>\r\n                <br/>\r\n                <Divider/>\r\n                <br/>\r\n                <Grid container direction='row'>\r\n                    <Grid item xs={false} md={1}/>\r\n                    \r\n                        <Grid item xs={12} md={10}>\r\n                            <form>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Name} error={textfieldError.Name} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Name' type='text' label='First Name' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.LastName} error={textfieldError.LastName} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='LastName' type='text' label='Last Name' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.LastName}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Class} error={textfieldError.Class} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Class' type='text' label='Class' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Class}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={2}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Year} error={textfieldError.Year} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Year' type='number' label='Year of passing' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Year}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Marks} error={textfieldError.Marks} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Marks' type='number' label='Percentage of marks' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Marks}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={2}/>\r\n                            </Grid>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={4}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <Button className={classes.textfield} color='primary' \r\n                                    variant='outlined' fullWidth disabled={!formValid.buttonActive}\r\n                                    type='button' onClick={handleSubmit}\r\n                                    >\r\n                                    Submit</Button>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={4}/>\r\n                            </Grid>\r\n                            </form>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={4}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <Button className={classes.textfield} color='primary' variant='outlined' fullWidth onClick={() => history.push('/admin-school-admission-list')}>Go to Admin - School Admission Form Page</Button>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={4}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                   \r\n                    <Grid item xs={false} md={1}/>\r\n                </Grid>\r\n            </ThemeProvider>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={errorMessage.length===0?'success':'error'}>\r\n                    {\r\n                        errorMessage.length === 0?\r\n                        successMessage:\r\n                        errorMessage\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n            \r\n        </>\r\n    );\r\n};\r\n\r\nexport default SchoolAdmissionForm;","//necessary imports\r\nimport React, { useState, useEffect} from 'react';\r\n//Material-UI imports\r\nimport {Grid,Divider,Typography,\r\n    Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper\r\n} from '@material-ui/core'\r\nimport {makeStyles,createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\r\nimport {green} from '@material-ui/core/colors'\r\n//import axios\r\nimport axios from 'axios'\r\n\r\n// MUI-makeStyles\r\nconst useStyles = makeStyles((theme) => ({\r\n    typography : {\r\n        textAlign : \"center\"\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    }\r\n}))\r\n\r\n//make a MUI theme\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    }\r\n})\r\n\r\n//-------------------------------------------------------------useStyles-----------------------------------------------------------------//\r\nconst AdminSchoolAdmissionList = () => {\r\n\r\n    //fetch data from the API link\r\n    const [tableData,setTableData] = useState([])\r\n    const [errorMessage,setErrorMessage] = useState('')\r\n    useEffect(() => {\r\n        axios.get('https://student-notice-board.herokuapp.com/getAdmissions').then(response => {\r\n            if(response.data.message && response.data.message.length !==0){\r\n                setTableData(response.data.message)\r\n                setErrorMessage('')\r\n            }\r\n        }).catch(err => {\r\n            setTableData([])\r\n            setErrorMessage(err.response.data.message)\r\n        })\r\n    })\r\n\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <ThemeProvider theme={theme}>\r\n                <br/>\r\n                <Typography color='primary' variant='h4' className={classes.typography}>\r\n                    ADMIN - STUDENT ADMISSION LIST\r\n                </Typography>\r\n                <br/>\r\n                <Divider />  \r\n                <br/>\r\n                <Grid container direction='row'>\r\n                    <Grid item xs={false} md={1}/>\r\n                    <Grid item xs={12} md={10}>\r\n                    {\r\n                        errorMessage.length === 0 ? <TableContainer component={Paper} elevation={0}>\r\n                        <Table className={classes.table} size='small'>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell >STUDENT ADMISSION LIST</TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                    <TableCell  ></TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell >First Name</TableCell>\r\n                                    <TableCell  align=\"center\">Last Name</TableCell>\r\n                                    <TableCell  align=\"center\">Class</TableCell>\r\n                                    <TableCell  align=\"center\">Year of passing</TableCell>\r\n                                    <TableCell  align=\"center\">Percentage of marks</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tableData.map((row) => (\r\n                                    <TableRow key={row.Name}>\r\n                                        <TableCell  component=\"th\" scope=\"row\" className={row.color}>\r\n                                            {row.Name}\r\n                                        </TableCell>\r\n                                        <TableCell key={row.LastName} align=\"center\" >{row.LastName}</TableCell>\r\n                                        <TableCell key={row.Class} align=\"center\" >{row.Class}</TableCell>\r\n                                        <TableCell key={row.Year} align=\"center\" >{row.Year}</TableCell>\r\n                                        <TableCell key={row.Marks} align=\"center\" >{row.Marks}</TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>:\r\n                    <Typography style={{color:'red'}} variant='h6' className={classes.typography}>\r\n                        {errorMessage}\r\n                    </Typography>\r\n                    }\r\n                    </Grid>\r\n                    <Grid item xs={false} md={1}/>  \r\n                </Grid>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminSchoolAdmissionList;","//Make necessary imports\r\nimport React, { useState } from 'react';\r\n//Material-ui Imports \r\nimport {Grid,TextField,Divider,Button,Typography,Snackbar} from '@material-ui/core'\r\nimport {makeStyles,createMuiTheme, ThemeProvider} from '@material-ui/core/styles'\r\nimport {green} from '@material-ui/core/colors'\r\n//Alert from Mui/lab\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n//import axios\r\nimport axios from 'axios'\r\n\r\n\r\n//core function for snackbar\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n//MUI useSTyles\r\nconst useStyles = makeStyles({\r\n    typography : {\r\n        textAlign : \"center\"\r\n    },    \r\n    errorTypography : {\r\n        color : 'red',\r\n        marginLeft : '10px',\r\n        textAlign: 'center'\r\n    },\r\n    textfield:{\r\n        margin:'10px'\r\n    }\r\n})\r\n\r\n\r\n//make an MUI theme\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: green,\r\n    }\r\n})\r\n\r\n\r\nconst AdminStudentResultForm = (props) => {\r\n    const classes = useStyles()\r\n    //get History\r\n    const {history} = props\r\n\r\n    //snackbar state and handler\r\n    const [open,setOpen] = useState(false)\r\n    const handleClose = (e,reason) => {\r\n        if(reason === 'clickaway'){\r\n            return\r\n        }\r\n        setOpen(false)\r\n    }\r\n    const [successMessage,setSuccessMessage] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n//-----------------------------------------------VALIDATION------------------------------------------------------------//\r\nconst [form,setForm] = useState({name:'', rollNumber:'', Maths:'', English:'', Science:''})\r\nconst [formError,setFormError] = useState({name:'', rollNumber:'', Maths:'', English:'', Science:''})\r\nconst [formValid,setFormValid] = useState({name:false, rollNumber:false, Maths:false, English:false, Science:false,buttonActive:false})\r\nconst [textfieldError, setTextfieldError] = useState({name:false, rollNumber:false, Maths:false, English:false, Science:false})\r\n\r\n//handleChange\r\nconst handleChange = e => {\r\n    const {name,value} = e.target\r\n    setForm({ ...form, [name]: value })\r\n    validate(name,value)\r\n}\r\n\r\nconst validate = (name,value) => {\r\n    let modifiedFormError = formError\r\n    let modifiedFormValid = formValid\r\n    let modifiedTextfieldError = textfieldError\r\n    const regex1 = new RegExp(/^[A-Za-z ]+$/)\r\n    switch(name){\r\n        case 'name' : \r\n            if(value.length === 0){\r\n                modifiedFormError[name] = 'Field Required'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else if(value.length > 20){\r\n                modifiedFormError[name] = 'Length can not be more that 20'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else if(!(regex1.test(value))){\r\n                modifiedFormError[name] = 'Only alphabets are allowed'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else{\r\n                modifiedFormError[name] = ''\r\n                modifiedFormValid[name] = true\r\n                modifiedTextfieldError[name] = false\r\n            }\r\n            break\r\n        case 'rollNumber' : \r\n            if(value.length === 0){\r\n                modifiedFormError[name] = 'Field Required'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else{\r\n                modifiedFormError[name] = ''\r\n                modifiedFormValid[name] = true\r\n                modifiedTextfieldError[name] = false\r\n            }\r\n            break\r\n        case 'Maths' : \r\n            if (value.length === 0) {\r\n                modifiedFormError[name] = 'Field Required'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else if(Number(value)<0||Number(value)>50)\r\n            {\r\n                modifiedFormError[name] = 'Marks should be between 0 and 50'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else {\r\n                modifiedFormError[name] = ''\r\n                modifiedFormValid[name] = true\r\n                modifiedTextfieldError[name] = false\r\n            }\r\n            break\r\n        case 'English':\r\n            if (value.length === 0) {\r\n                modifiedFormError[name] = 'Field Required'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else if (Number(value) < 0 || Number(value) > 50) {\r\n                modifiedFormError[name] = 'Marks should be between 0 and 50'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else {\r\n                modifiedFormError[name] = ''\r\n                modifiedFormValid[name] = true\r\n                modifiedTextfieldError[name] = false\r\n            }\r\n            break\r\n        case 'Science':\r\n            if (value.length === 0) {\r\n                modifiedFormError[name] = 'Field Required'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else if (Number(value) < 0 || Number(value) > 50) {\r\n                modifiedFormError[name] = 'Marks should be between 0 and 50'\r\n                modifiedFormValid[name] = false\r\n                modifiedTextfieldError[name] = true\r\n            }\r\n            else {\r\n                modifiedFormError[name] = ''\r\n                modifiedFormValid[name] = true\r\n                modifiedTextfieldError[name] = false\r\n            }\r\n            break\r\n        default : break  \r\n    }\r\n    modifiedFormValid.buttonActive = modifiedFormValid.name && modifiedFormValid.rollNumber && modifiedFormValid.Maths\r\n                                         && modifiedFormValid.English && modifiedFormValid.Science\r\n        \r\n    setFormError(modifiedFormError)\r\n    setFormValid(modifiedFormValid)\r\n    setTextfieldError(modifiedTextfieldError)\r\n}\r\n\r\n//----------------------------------------------------formSubmission-----------------------------------------------//\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    let obj = {name:form.name,marks:{Maths:form.Maths, English:form.English, Science:form.English},rollNumber:form.rollNumber}\r\n    axios.post('https://student-notice-board.herokuapp.com/createResult',(obj)).then(response => {\r\n        if(response.data.message){\r\n            setSuccessMessage(response.data.message)\r\n            setErrorMessage('')\r\n            setForm({name:'', rollNumber:'', Maths:'', English:'', Science:''})\r\n            setOpen(true)\r\n        }\r\n    }).catch(err => {\r\n        setSuccessMessage('')\r\n        setErrorMessage(err.response.data.message)\r\n        setForm({name:'', rollNumber:'', Maths:'', English:'', Science:''})\r\n        setOpen(true)\r\n    })\r\n    \r\n}\r\n\r\n//---------------------------------------------------------JSX-------------------------------------------------------//\r\n\r\n    return (\r\n        <>\r\n          <ThemeProvider theme={theme}>\r\n                <br/>\r\n                <Typography color='primary' variant='h4' className={classes.typography}>\r\n                    ADMIN - STUDENT RESULT FORM\r\n                </Typography>\r\n                <br/>\r\n                <Divider/>\r\n                <br/>\r\n                <Grid container direction='row'>\r\n                    <Grid item xs={false} md={1}/>\r\n                    \r\n                        <Grid item xs={12} md={10}>\r\n                            <form>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.name} error={textfieldError.name} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='name' type='text' label='Name' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.name}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.rollNumber} error={textfieldError.rollNumber} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='rollNumber' type='text' label='Roll Number' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.rollNumber}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Maths} error={textfieldError.Maths} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Maths' type='number' label='Marks in Maths' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Maths}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={2}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.English} error={textfieldError.English} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='English' type='number' label='Marks in English' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.English}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <TextField value={form.Science} error={textfieldError.Science} onChange={handleChange} className={classes.textfield} fullWidth variant='outlined' name='Science' type='number' label='Marks in Science' /><br/>\r\n                                    <Typography variant='button' className={classes.errorTypography}>{formError.Science}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={2}/>\r\n                            </Grid>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={4}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <Button className={classes.textfield} color='primary' \r\n                                    variant='outlined' fullWidth disabled={!formValid.buttonActive}\r\n                                    type='button' onClick={handleSubmit}\r\n                                    >\r\n                                    Submit</Button>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={4}/>\r\n                            </Grid>\r\n                            </form>\r\n                            <br/>\r\n                            <Divider/>\r\n                            <br/>\r\n                            <Grid container direction='row'>\r\n                                <Grid item xs={false} md={4}/>\r\n                                <Grid item xs={11} md={4}>\r\n                                    <Button className={classes.textfield} color='primary' variant='outlined' fullWidth onClick={() => history.push('/')}>Go to Student Result Board</Button>\r\n                                </Grid>\r\n                                <Grid item xs={false} md={4}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                   \r\n                    <Grid item xs={false} md={1}/>\r\n                </Grid>\r\n          </ThemeProvider>\r\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={errorMessage.length===0?'success':'error'}>\r\n                    {\r\n                        errorMessage.length === 0?\r\n                        successMessage:\r\n                        errorMessage\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminStudentResultForm;","//necessary imports\nimport React from 'react';\n\n//Material-ui Imports\nimport {Grid, Button, Divider} from '@material-ui/core'\nimport {createMuiTheme, ThemeProvider, makeStyles} from '@material-ui/core/styles'\nimport {green} from '@material-ui/core/colors'\n\n//react-router-dom imports\nimport {Switch,Route,Link} from 'react-router-dom'\n\n//Import Components\nimport StudentResultBoard from './components/StudentResultBoard'\nimport SchoolAdmissionForm from './components/SchoolAdmissionForm'\nimport AdminSchoolAdmissionList from './components/AdminSchoolAdmissionList'\nimport AdminStudentResultForm from './components/AdminStudentResultForm'\n\n//make a MUI theme\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  }\n})\n\n//makeStyles form MUI\nconst useStyles = makeStyles((theme) => ({\n  appbar:{\n    backgroundColor:'white'\n  },\n  primaryGrid:{\n    marginLeft : '20px',\n    marginRight : '20px'\n  },\n  button:{\n    fontSize:'13px',\n    textAlign:'center',\n    fontWeight : 'bolder'\n  }\n}))\n\n\nconst App = () => {\n  const classes = useStyles()\n  return (\n    <>\n    <ThemeProvider theme={theme}>\n        <br/>\n          <Grid container direction='row'>\n            <Grid item xs={false} md={2}/>\n            <Grid item xs={12} md={2}>\n              <Button color='primary' component={Link} to='/' className={classes.button}>\n                  Student result board\n              </Button> \n            </Grid>\n            <Grid item xs={12} md={2}>\n              <Button color='primary' component={Link} to='/admission-form' className={classes.button}>\n                  School Admission Form\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <Button color='primary' component={Link} to='/admin-school-admission-list' className={classes.button}>\n                  Admin - School Admission List\n              </Button>\n            </Grid>\n            <Grid item xs={12} md={2}>\n              <Button color='primary' component={Link} to='/admin-student-result-form' className={classes.button}>\n                  Admin - Student Result Form\n              </Button>\n            </Grid>\n            <Grid item xs={false} md={2}/>\n          </Grid>\n          <br/>\n          <Divider/>\n    </ThemeProvider>\n    <Switch>\n      <Route exact path='/' render={(props) => <StudentResultBoard {...props}/>}/>\n      <Route exact path='/admission-form' render={(props) => <SchoolAdmissionForm {...props}/>}/>\n      <Route exact path='/admin-school-admission-list' render={(props) => <AdminSchoolAdmissionList {...props}/>}/>\n      <Route exact path='/admin-student-result-form' render={(props) => <AdminStudentResultForm {...props}/>}/>\n    </Switch>\n    </>\n  );\n};\n\nexport default App;","//Necessary Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//react-router-dom import\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}